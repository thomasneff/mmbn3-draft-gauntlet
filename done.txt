Implement AI byte patching

Implement per-battle patching, so we can pre-define all battles and just patch one-by-one
 - Changed battle patching to now be per-battle. This removes the need of pointer adjustment.
 - We simply patch each battle as it comes, and use the existing offsets :-)

Implement a system that forces battles 5 and 10 to be single-enemy. (probably some flag in GAUNTLET_DEFS)

Find the offset for Dominerd's Chip (should be Geddon, probably need to debug with No$GBA to find when he uses geddon.)
 - The number of Geddon chips is put into 0203735E RAM during battle start.
 - The number of attacks before Geddon is put into 020373A8 RAM during battle start.
 - 080C4B58 contains the test for the number of attacks between geddons.
 - 080C4EBC contains the sub instruction for reducing the number of attacks
 - after subbing and *not* branching, it loads the content of 020373D0 (= 080AEB30, which is Dominerd AI start) into r1.
 - at AI + 0x06, load delay into r1.
 -
 - After waiting for the delay, it executes the test @ 080C4B58 again. It doesn't branch. r0 == 0
 - Loads Dominerd AI address into r0
 - Loads Number of Geddons into r0
 - Subtracts 1 (080C4B66)
 - It loads 0x19 into r0, which is the chip family, and 0x00 into r1, which is the sub-family. loads 0x01 into r2, 0x0A into r3. This might be damage?
 - Actually, 0x01 might be the user... we might be able to hook into this?
 - Anyways, the Chip Family is at 080C4B6C, the Subfamily is at 080C4B6E. Damage is in r3, which gets set in 080C4B72. User gets pulled from RAM, so bad luck there, unless we 
   want to hook into it, which we definitely could.


Deetle and HardHead are definitely bugged. Sometimes their shots fly offscreen?
 - This was just an emulator bug with VBA-RR and solved itself when switching to BizHawk.

Add special code for Twins viruses, such that if they spawn, they are the only virus type, otherwise their AI is screwed up and they don't do anything.

Add code to reload the script with a button combination.

Dump Chip names and descriptions. (Dump such that constant strings are defined for easy editing.
Possibly also dump string length at the same time so we don't overwrite anything.
    - This is all pretty unnecessary... I dumped chip name addresses, that's enough for now.

Implement rendering of icons in folder.

Implement Chip Patching of folder. Patch every time a chip is replaced.

Implement Chip replacement logic.

Automatically patch all chip data in folder when something is "upgraded". For now, we can just patch before every battle.

Implement HP scaling over rounds.

Implement Roguelike-style upgrades after each round. For that, make all variables part of state_logic, and each upgrade simply has a name, description and function that gets called upon selection.

Find out battle clear offset, to load initial.State again after finishing 10 battles.
    - Found 0x08029398. This is executed when finishing a battle, therefore can be used to count battles.

Implement Chip Picture rendering.

Implement example buff ("Cannons do + 20 Damage"), to test chip patching of folder chips.

Implement example buff nerfing specific kinds of viruses.

BUG: soft-resetting doesn't reset all upgrades.
SOLUTION: probably implement an "UNDO" for all buffs, store all activated buffs and undo them all upon soft reset.

During battle, Bolt is fine. Therefore I think just the picture offsets might be messed up, since we don't patch those.
However, it seems more like the name offsets for rendering (... PRINT_NAME?) might be wrong, since during game everything is fine,
but during rendering, the names are wrong, but the icons are correct.
BUG: Fountain picture was displayed with name Bolt
BUG: Bolt picture was displayed with name GaiaBlade
    - Has the correct picture + icon for Fountain, but wrong name. Damage and other stuff is also correct.
    - During battle, the name is correct, so it's probably just the name offset, that's wrong, since we don't patch the names.
    - The bug results from Punk missing from my CHIP IDs. (should be 0x110). Afterwards everything is screwed up until KingMan, where 0x117 is missing.
    - We need to dump the chip data again :(

    - BUG: KingMan (V1) icon is the one from GaiaBlade


Get all virus breeder viruses in the save game so the chips don't puff.


02001DCA sets style change after battle. we might be able to find out how this influences the style change RNG. Then we could Manipulate it and just load a style-change savestate.

at 08015CB2, current style (0x11 for ElecCust) is loaded into r0.
at 08015B48,  after hitting "overwrite" for the style, it is written into the currently equipped modifier.
at 08015B3A, the TYPE of the style might loaded from 0200F8DA (at least it's one part of the style)
at 08015B3E, the ELEMENT of the style might be loaded from 0200F8DB
at 08015B40, the final style code is written into r0.
... Changing r0 here DOES change the style!
Then r0 (the style code) is stored at 02001880 + 1 and 02001880 + 14
STYLE OFFSETS before battle: 0x02001881, 0x02001894

in transition, style is stored first to 0x0200F334
then gets stored into 0x0203B39C

Style: Style-equipped modifier is at 0x02001894. Need to fire up debugger to check what loads this and intercept.
  - At 0x08047306, the Number of Chips is set for CustStyle.
  - Name/Text for styles: 0x0871223C starts "ElecCust".
  - Style change routine sets the following, maybe this is also the NaviCust routine?
    - MegaChips: 5770 + 14
    - GigaChips: 5770 + 15
    - CustScreenChips: 5770 + 13
    - ??? : 5770 + 26 (this is set to 1 for ElecCust)
    - BusterAttack : 5770 + 8 (this is set to 0 for ElecCust)
    - BusterWeaponLevel : 5770 + D (this is set to 1 for ElecCust)
    - OilBody/AimFish/etc. : 5770 + 1B (this is set to FF for ElecCust)
    - ??? : 5770 + 4 (this is set to 1 for ElecCust)
    - CustScreenChips : 5770 + 13 (this is set to 7 for ElecCust)
    - BusterSpeed : 5770 + 9 (this is set to 1 for ElecCust)
    - BusterCharge : 5770 + A (this is set to 1 for ElecCust)
    - BusterSpeed : 5770 + 9 (again..? this is set to 2 for ElecCust)
  - It seems that 0803CB54 calls the NaviCust-RAM patch function at 0x08047340
  - It seems that 0803CAFA calls some function 08047304 upon changing to ElecCust, at least 02005770 is already in r2 at that point.
    - This might be the style initialization...? before calling it, it pushes hardcoded values of 0x04 into r0, 0x01 into r1. This is basically the fnuction that takes offset/value for navi cust stuff?

Weapon Level is also stored in 02009740 + 4 = 02009744

0x0200F334
memory.writebyte(0x0000F334, 0x1C, "EWRAM") <-- with our current setup, this successfully changes the style if done in TRANSITION_TO_RUNNING.



Find out how to change number of chips in Cust Screen.
  - 0x02005783 is the offset for number of chips before battle.
  - 0x02006CAE is the offset for number of chips during battle.
    - we should simply patch both.

Implement folder sorting in rendering. (Simply use start to toggle through Alpha/Code/ID/Damage)


For stages, try out the other values as well.

SetMetal: 02005787 <-- set to 0035
SetGreen: 02005787 <-- set to 0036
SetIce: 02005787 <-- set to 0037
SetMagma: 02005787 <-- set to 0038
SetSand: 02005787 <-- set to 003A
SetHoly: 02005787 <-- set to 0019



Implement buffs related to Buster.
  - 0x02005778 is the offset for Buster Attack.
  - 0x02005779 is the offset for Buster Speed.
  - 0x0200577A is the offset for Buster Charge.
  - 0x0200577D is the offset for Buster Weapon Level.



AirShoes: 0x02005773
FastGauge: 0x02005788
UnderShirt: 0x02005774
SuperArmor: 0x02005771

BUG: UnderShirt isn't working.
  - Was just a wrong address.

Implement reasonable start folder randomization?
  - For now, it randomizes based on Library stars...
Implement random drops according to Library Stars, 80% Chance of current tier, 10% chance of higher, 10% chance of lower
  - This is just temporary, until curated drops are implemented. Might keep it as an option though, as it could be fun.


Implement objects on MegaMan side.

Implement Select to switch to folder view from all choose states. (Just use nil for selected chip and index.)

Implement list of starting folder options. (each folder already has a overloaded function, we can use this.)
  - Draw an arrow to signify if there are more at the top or bottom.


Implement 30 Chips folder drafting. (Needs nil-checks in rendering)


Implement nicer draft with a generator function. Test using 9 standard, 1 mega, 9 standard, 1 mega, 9 standard, 1 giga.


Implement removal of certain buffs when activated? Don't know how I'd implement that yet.

Enforce MegaChip/GigaChip limit + add standard chip drops for Bosses?
    - We can easily keep track of added mega/giga chips.
    - Add text to rendering that displays the limit.

Special drops for Miniboss/Bosses? Drop tables are already implemented, would only need to be defined.

Implement other buffs related to NaviCust stuff.


All NaviCust programs can simply be patched in TRANSITION_TO_RUNNING


ShadowShoes: 0x02005772 <-- set to 0x01
FloatShoes: 0x02005772 <-- set to 0x02
BreakBuster: 0x02005776
BreakCharge: 0x0200577E
BlockWithL: 0x0200577F <-- set to 0x02
ShieldWithL: 0x0200577F <-- set to 0x04
ReflectWithL: 0x0200577F <-- set to 0x06
DarkLicense: 0x02005790


BUG: sometimes during buff selection (happened at the start of round 4 last time), the random buff selection crashes with nil

BUG: Sword/Element buffs don't disappear when soft resetting
  -  Was just a bug in state_logic when reverse iterating over all buffs.


Increased drop chance (single buff, rolls from different rarities)
    -   single buff, rolls from different rarities (e.g. Rare, Super Rare, Ultra Rare)
    -   e.g.    Rare + 5%, HP - X
    -           Super Rare + 5%, HP - 3X <-- this should be on the level of "Tank"
    -           Ultra Rare + 5%, HP - 5X 
    
Damage buffs with drawback
    -   add to existing buff as random roll, rolls -3X HP for *2 buff damage <-- on the level of "Tank"

Snecko Eye
    -   Randomizes codes after every battle to X number of codes (probably around 6 or 7)
    -   Potentially don't randomize star code chips
    -   Custom + X (probably around 2 or 3)
    -   If it is too weak, maybe add chip damage? Not sure.


Stacking Buffs (stack after each perfect fight)
    -   Figure out if we can detect lost HP. <-- easy AF, need to check if it breaks when a rockCube spawns on our field?
    -   Implement 'streak' - function that does all streak-related things before patching the folder before battle.
    -   We can basically just increase the damage of all chips we have in our folder (look at sword dmg increase for example)
        - Afterwards, we simply revert that increase again.
    -   Damage +X%/+FlatX for every perfect battle, up to +Y%
    -   Drop Rarity (same as before with different types) +X% for every perfect battle, up to +Y%

Heal %/Flat after every battle

MemeBomb
    -   Replace X chips of your folder with MiniBomb, MiniBomb does +200 damage.

Option: Style Change after Fight 10.

Replacing Giga/MegaChips with StandardChips is still broken and doesn't update the count correctly.
    -   We're just recomputing the Mega/Giga chip counts more often.

Cleaned up gui_rendering
    -   Merged all list-rendering functions into a single function for Buffs/Loadouts/Drop Methods.


Replace MiniBomb name with MemeBomb on buff

HP bugs stemmed from mixing current/maxHP during battle and during loading. Changes during loading should be fixed now.



HP_INCREASE_PER_ROUND is also bugged.

Regenerator bug:

  - Seems like hp manipulation is still wonky.
  - Tests (Current HP)
    - FAA0 <-- seems to work.


Mega HP Address for 1 entity: 037369 EWRAM
Mega HP Address for 2 entities: 03743C EWRAM
Mega HP Address for 3 entities: 037510 EWRAM
Mega HP Address for 4 (3 + 1) entities: 037510 EWRAM










Perfectionist bug: sometimes damage taken doesn't count, happened during Twins/Twinner fight (possibly after healing before/after taking damage?)
  - Test using a mixed recov/plantman folder and forcing twins viruses. 
    - although I don't think that the twins viruses are the issue, I think it's the hit detection, as it didn't detect a hit afair

ALL BUFFS THAT MANIPULATE HP NEED TO CHECK FOR <0 AND FORCE IT TO 1!

Find something to check if we died. (Possibly just find out when HP is set, and THEN check for zero)

Statistics:
for every round: entities, drops, picked chips, folder after replace, current HP

-> list storing these things

upon reset -> store as JSON

write visualizer in C# or whatever?

MetalGear is bugged. (doesn't appear in battle)


In some circumstances, being killed by a Lava Panel when < 50 HP (was around ~34 HP) doesn't trigger the auto reset
This happened in the battle after a poison stage was picked and I took some poison damage

Happened again. This time the poison damage didn't register, and the death as well. I started with a Guardian on my side, a Spikey and a Dominerd.

-> Fixed, it was caused by counting rolled Guardians and such before the fourth slot as entities for MegaMan's HP address. Only viruses/navis count.


Perfectionist is broken, if the temporary damage is there when another buff is picked, it gets applied an additional time.
(e.g. +25% before taking a buff -> +50% after taking a buff, even if it's not Perfectionist again.)


maybe define lava panels for stages, such that blackbomb can not spawn on a lava panel


new buff: upgrade 2 (3?) random chips in folder (chip id + 1, possibly make a list of "fully upgraded chips" and don't pick them?)


Reduce all damage by 10 (add this to reflect?)

Increase healing by 50%

Spiked Armor -> would require having in-battle HP offsets...

BublSide shouldn't be upgraded? <-- levelup bug

UnderShirt + Reflect? <-- removed the other from the pool if one is picked

Merge WeaponLevel+1 and Attack? (Attack+2 WeaponLevel+1)

Collector increase bonus

folderbak fucks everything:
investigate with no$gba:

    -   On battle start (1a) : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=1, r7=080004c0, r8=0203E902,
                              r9=0200ab90, r10=080004c0, r11=0, r12=0, r13=03007ba8, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    -   On battle start (1b) : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=0, r7=080004c0, r8=0203E902,
                              r9=0200ab90, r10=080004c0, r11=0, r12=0, r13=03007ba8, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    -   On battle start (2a) : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=1, r7=080004c0, r8=0203E91E,
                              r9=0200ab90, r10=080004c0, r11=0, r12=0, r13=03007ba8, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    it seems r6 is different between the first and second ones, maybe this is also the case for folderbak!

    -   On FolderBak (1a)    : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=1, r7=080FC50D, r8=0201CC32,
                              r9=0203757C, r10=080004c0, r11=0, r12=0, r13=03007b94, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    -   On FolderBak (1b)    : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=0, r7=080FC50D, r8=0201CC32,
                              r9=0203757C, r10=080004c0, r11=0, r12=0, r13=03007b94, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    -   On FolderBak (2a)    : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=1, r7=080FC50D, r8=0201CCFA,
                              r9=0203757C, r10=080004c0, r11=0, r12=0, r13=03007b94, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0

    -   On FolderBak (2b)    : r0=0, r1=1E, r2=0, r3=02001880, r4=1, r5=0, r6=1, r7=080FC50D, r8=0201CCFA,
                              r9=0203757C, r10=080004c0, r11=0, r12=0, r13=03007b94, r14=08011469, r15=080114d4
                              cpsr=8000003F, spsr=0


    is seems r9 is ALWAYS 0200AB90 for our gauntlet battle starts!
    however, it is simply much simpler to check if we are already in battle xD


save statistics every battle

1420991722
NLua.Exceptions.LuaScriptException: .\state_logic.lua:1151: attempt to perform arithmetic on field '?' (a nil value)
    - it showed a single mettaur, which I think might be the "default" battle data? so it probably has not patched it, therefor leading to NUM_ENTITIES being undefined
    - check battle data generator for round > 40
    - I unfortunately can't reproduce this as we had "skill, not luck", which changes rng depending on how your battles go.
    - try writing a test function that simply tests random fights of round 41 until something weird happens

can't "cancel" the first initial folder screen with B?


music RNG should have its own seed


-- TODO: special case when no chip has dropped yet for gauntlet_data.illusion_of_choice_active
-- TODO: keep cursor when sorting (is nice anyways, but illusion of choice NEEDS it)


Rewind
    -   once *per gauntlet*, if you would die, you instead re-load the beginning of the battle



copy paste display how much is left



- refactor the "random damage" code into function
- refactor the "all damage" code into function
- refactor the "heal" code into function

Testing TODO:
test all reflect and heal interactions.
    - Rewind: working
    - Regenerator: working
    - Spiked Armor (both): working
    - Reflect : working after being broken.
    - Time Compression: working
    - Medic: working




why does GelRain (MetaGel 1 Q/R/S not work?)
    -   this is because BN3 does PAs differently, and stores a *fixed* starting chip code for every consecutive PA.
    -   I can change this dynamically, by simply patching the ROM data the PA gets loaded from.
        *   I can do this in a single PA slot and simply adjust the PA data according to which chips were picked. 

"Speedrunner - Beat the next boss in X minutes, + something"
    - reward: FullCust * for now. Might reg it, might do a custom fastgauge.

Necessary Hooks:
    -   when cust screen is confirmed -> this should be tracable, hopefully, as this is necessary for PA patching. 0800F7D8
    -   when chip is used -> this is easy by looking into the RAM address during battle. Still needs investigation with different kinds of battle scenarios / number of entities
    -   find custgauge value address, if exists (6CCD EWRAM for bar, 6CAC for "can open cust screen flag")
    -   find current chip damage value, if exists (done!)

new buff that sets a random chip as "reg" (with corresponding highlight in rendering) (needs lots of code)
    - implement reg-chip attribute to folder chips that rendering takes into account, 

e.g. buff that damages random enemy if healing chip is used

e.g. buff that fills cust gauge if chips of 3 different elements are used

e.g. buff that deals 100 damage if 5 chips are used in same turn

new buff which copies a chip from your folder
    -   either shows which chip is replaced
    -   or which chip is duplicated

duplicator after drafting is weird?


fix custgauge pause bug -> also fix for timefreeze chips
it seems weird that it "jitters" multiple times every 10 frames (?) -> seems to be "normal" actually



on first frame anticust doesn't work


Pen Nib: every 10th chip used deals 1.5x damage (keeps track across battles)


Tactician: a chip in folder is marked, when it is removed/replaced -> +25% damage for next fight
    - careful with other buffs that replace chips -> the best way is to simply check number of tactician chips at buff-pick *and* end of battle, and check before patching battle
    - This rolls a new tactician chip every time
    - can not stack with REG chips (for highlighting reasons)


Bounties:
Stay below 20% MaxHP for 5 consecutive battles



Next 5 fights are bosses - +5 MegaChip limit


TODO: everything that replaces a random chip (and actually shows you what it replaces) might be bugged because of shuffle!

Some kind of bonus for N different codes (10 different codes seems reasonable)
    - either rarity up, or a certain number of chips is converted to star code before each battle randomly