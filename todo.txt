Buffs:

In some circumstances, being killed by a Lava Panel when < 50 HP (was around ~34 HP) doesn't trigger the auto reset

Space-Pause-Continuum: every time pause is pressed, lose HP equal to 1% MaxHP, Custom + 2, HP + 100






Entities. Add all the info from TREZ.

During Drafting:
\randomchoice.lua:3: bad argument #1 to 'pairs' (table expected, got nil)

Choosing the 6 codes loadout sometimes crashes randomchoice_key in line 7, so probably megachips/standardchips are nil?


BUG/UNINTENDED: The on_enter_battle() callback gets fired twice after the initial battle. Doesn't matter however, as we guard against that anyways.

Add all virus families to debuff-buff, otherwise remove for now.


Test if all buffs and patching still works. Look at HP, Custom+, all other NaviCust things, styles...

BUG/Intentional? Picking an HP buff in round 5 restores HP. Could be a nice intended strategy?


Remove N-O-2 virus, as it's OP.



Possibly implement images for buffs? Would implement simply as chip_id and render a chip.
Possibly implement buff rarities? Normal, Mega, Giga?



Implement better battle progression (split into easy, medium, hard viruses, with t1, t2, t3, t4, possibly t5)





Implement example buff that implements custom + (e.g. All Mettaur-Virusses instantly kill you, but you start with +X custom chips)
Find out how to change cust gauge speed.


Find out Boomer PanelGrab offset.
Find out Swordy AreaGrab offset.
Find out Pengi IceStage offset. <-- this should be easy, as I don't remember any other virus/navi using IceStage.


Possibly implement a system to create fixed fights the game can choose from. Should contain ENTITIES, BACKGROUND, STAGE.



TODO:
Chip Data defs, index to Name, Chip Icon, Chip Image, address for codes, damage
we automatically patch over it at the start with those values


contain drop tables for chips, 
map from chance to list of chips with codes?

ChipGenerator.GetChipWithSpecificCodeIfExists(CHIPS.ShockWav, CHIP_CODE.A) -- this either returns a chip with code A if it exists, or non-asterisk otherwise.

-- If there are only asterisk (for whatever reason) just return asterisk.
60 =  ChipGenerator.GetChipListNonAsterisk(CHIPS.ShockWav) -- this returns copies of the shockwav chip with all non-asterisk codes, which contains address, index, etc., to put into folder

80 =  ChipGenerator.GetChipAsterisk(CHIPS.Guard) -- should also return a list with a single entry.

95 = ChipGenerator.GetChipAsterisk(CHIPS.ShockWav)

100 = ChipGenerator.GetChipListNonAsterisk(CHIPS.SonicWav)
