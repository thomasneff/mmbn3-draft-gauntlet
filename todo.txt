Buffs:


why does GelRain (MetaGel 1 Q/R/S not work?)
    -   this is because BN3 does PAs differently, and stores a *fixed* starting chip code for every consecutive PA.
    -   I can change this dynamically, by simply patching the ROM data the PA gets loaded from.
        *   I can do this in a single PA slot and simply adjust the PA data according to which chips were picked. 

for all hand/chip use manip effects:
    - refactor the "random damage" code into function
    - refactor the "all damage" code into function
    - refactor the "heal" code into function
    - make sure that a neat concept is used that is able to generically add chip use conditions.
        *   e.g.: first chip in battle is copied
            - needs a per round / per battle counter
            - has as condition: 1 any
            - has as effect: add the used/first chip again
            - gauntlet data needs to have a list of those buffs, and they implement onRoundStart and onChipUse

new buff that sets a random chip as "reg" (with corresponding highlight in rendering)
new buff that adds airshot/heatshot/zapring/bubbler to the "hand" upon certain circumstances
new buff that heals upon hand/use condition (?)
new buff that deals damage (random/all) upon hand/use condition
new buff that allows the first chip in battle to be used twice

if possible to read current chip damage IN BATTLE:
    -   small muramasa effect
    -   reverse muramasa effect
    -   custswrd effect
    -   reverse custswrd effect

new buff which copies a chip from your folder
    -   either shows which chip is replaced
    -   or which chip is duplicated






A buff that increases the number of dropped chips (change dropped chip rendering to be able to handle more than 3)
A buff that increases the number of dropped buffs (dropped buff rendering is already able to do this)

-- TODO: special case when no chip has dropped yet for gauntlet_data.illusion_of_choice_active
-- TODO: keep cursor when sorting (is nice anyways, but illusion of choice NEEDS it)



Buff: something awesome -> enemies regenerate 1 HP per second

Add buff description to statistics container for every round, just for information

Bug:

one of the bcc songs crashes



Following entity config:
stage = 27
MetalCube
Canodumb2
Twinner
Twinner
Twinner

When attacking all with plantman (and killing them) the game auto-reset.


Buffs:


Space-Pause-Continuum: every time pause is pressed, lose HP equal to 1% MaxHP, Custom + 2, HP + 100






Entities. Add all the info from TREZ.

During Drafting:
\randomchoice.lua:3: bad argument #1 to 'pairs' (table expected, got nil)

Choosing the 6 codes loadout sometimes crashes randomchoice_key in line 7, so probably megachips/standardchips are nil?


BUG/UNINTENDED: The on_enter_battle() callback gets fired twice after the initial battle. Doesn't matter however, as we guard against that anyways.

Add all virus families to debuff-buff, otherwise remove for now.


Test if all buffs and patching still works. Look at HP, Custom+, all other NaviCust things, styles...

BUG/Intentional? Picking an HP buff in round 5 restores HP. Could be a nice intended strategy?


Remove N-O-2 virus, as it's OP.



Possibly implement images for buffs? Would implement simply as chip_id and render a chip.
Possibly implement buff rarities? Normal, Mega, Giga?



Implement better battle progression (split into easy, medium, hard viruses, with t1, t2, t3, t4, possibly t5)





Implement example buff that implements custom + (e.g. All Mettaur-Virusses instantly kill you, but you start with +X custom chips)
Find out how to change cust gauge speed.


Find out Boomer PanelGrab offset.
Find out Swordy AreaGrab offset.
Find out Pengi IceStage offset. <-- this should be easy, as I don't remember any other virus/navi using IceStage.


Possibly implement a system to create fixed fights the game can choose from. Should contain ENTITIES, BACKGROUND, STAGE.



TODO:
Chip Data defs, index to Name, Chip Icon, Chip Image, address for codes, damage
we automatically patch over it at the start with those values


contain drop tables for chips, 
map from chance to list of chips with codes?

ChipGenerator.GetChipWithSpecificCodeIfExists(CHIPS.ShockWav, CHIP_CODE.A) -- this either returns a chip with code A if it exists, or non-asterisk otherwise.

-- If there are only asterisk (for whatever reason) just return asterisk.
60 =  ChipGenerator.GetChipListNonAsterisk(CHIPS.ShockWav) -- this returns copies of the shockwav chip with all non-asterisk codes, which contains address, index, etc., to put into folder

80 =  ChipGenerator.GetChipAsterisk(CHIPS.Guard) -- should also return a list with a single entry.

95 = ChipGenerator.GetChipAsterisk(CHIPS.ShockWav)

100 = ChipGenerator.GetChipListNonAsterisk(CHIPS.SonicWav)
